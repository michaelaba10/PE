''' 
 Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 By starting with 1 and 2, the first 10 terms will be:
 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 find the sum of the even-valued terms.
'''

from tictoc import tic,toc


def sum_even_fibonaccies_less_equal_than(limit):
    # This function sums all the even fibonaccies numbers that don't exceed a certain limit
    sum_even_fibonaccies = 0
    fibonaccies0 = [1,1]
    while (fibonaccies0[0]+fibonaccies0[1]<= limit) :
        new_fibonacci = fibonaccies0[0] + fibonaccies0[1]
    
        fibonaccies0[0] = fibonaccies0[1]
        fibonaccies0[1] = new_fibonacci
        if (new_fibonacci%2==0):
            sum_even_fibonaccies = new_fibonacci + sum_even_fibonaccies
    return sum_even_fibonaccies


tic()
result = sum_even_fibonaccies_less_equal_than(4000000)
toc()
print(result)