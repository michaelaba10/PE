''' 
 Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 By starting with 1 and 2, the first 10 terms will be:
 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 find the sum of the even-valued terms.
'''

from tictoc import tic,toc


def sum_even_fibonaccies_less_equal_than(limit):
    # This function sums all the even fibonaccies numbers that don't exceed a certain limit
    
    fibonaccies0 = [1,1]
    while (fibonaccies0[-1]+fibonaccies0[-2]<= limit) :
        new_fibonacci = fibonaccies0[- 2] + fibonaccies0[-1]
        fibonaccies0.append(new_fibonacci)
    even_fibonnaccies = [i for i in fibonaccies0 if i%2 == 0]
    return sum(even_fibonnaccies)


tic()
result = sum_even_fibonaccies_less_equal_than(4000000)
toc()
print(result)