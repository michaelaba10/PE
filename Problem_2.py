# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fibonacci_less_than(limit):
    fibonaccies0 = [1,1]
    size_fibonaccies0 = 2
    while (fibonaccies0[-1]+fibonaccies0[-2]<= limit) :
        size_fibonaccies0 = len(fibonaccies0)
        new_fibonacci = fibonaccies0[size_fibonaccies0 - 2] + fibonaccies0[size_fibonaccies0 - 1]
        fibonaccies0.append(new_fibonacci)
    fibonaccies0 = fibonaccies0[1:]
    fibonnaccies = [i for i in fibonaccies0 if i%2 == 0]
    return sum(fibonnaccies)



print(fibonacci_less_than(4000000))